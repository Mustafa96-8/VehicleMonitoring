@model Tuple<GPSData,List<GPSReading>>

<div class="d-flex  justify-content-center">
    <h2 class="text-primary ">Данные местоположения техники</h2>
    <hr />
</div>
<div class="d-flex justify-content-start">
    @if (Model.Item1 != null)
    {
        @if (Model.Item2.Count > 0)
        {
            <div class="m-3 border border-5 border-primary">
                <div  id="map" style="width:1000px ;height: 800px;"></div>
            </div>
            <div>
                <div class="container d-flex justify-content-between p-2">

                    <h2>
                        @Model.Item1.Name
                    </h2>
                    <div> <a class="btn btn-outline-primary vehicle-link" asp-action="index" asp-controller="VehicleValues" asp-data-id="@Model.Item1.VehicleId">Назад</a></div>
                </div>
                <table class="table table-striped table-hover">
                    <thead>
                        <tr>
                            <th>Широта</th>
                            <th>Долгота</th>
                            <th>Высота</th>
                            <th>Скорость</th>
                            <th>Направление</th>
                            <th>Время считывания системой</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.Item2)
                        {
                            <tr>
                                <td>@item.latitude</td>
                                <td>@item.longitude</td>
                                <td>@item.altitude</td>
                                <td>@item.speed</td>
                                <td>@item.heading</td>
                                <td>@item.CreationTime</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div>
                Значений для построения графика нет
            </div>
        }
    }
    else
    {
        <div>
            Выберите датчик для просмотра графика
        </div>
    }
</div>

<body>

</body>
<script>
    
    
    var coordinates = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Item2.Select(sv => new[] { sv.longitude, sv.latitude })));
    var info = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Item2.Select(sv => new { sv.CreationTime, sv.altitude,sv.heading,sv.speed})));
    console.log(coordinates);
    console.log(info);




    initMap(coordinates,info);
    async function initMap(coord,information) {
        await ymaps3.ready;
        console.log('2');
        const { YMap, YMapDefaultSchemeLayer, YMapDefaultFeaturesLayer, YMapFeature, YMapMarker } = ymaps3;

        const { YMapDefaultMarker } = await ymaps3.import('@@yandex/ymaps3-markers@0.0.1');

        lat = coord[0][1];
        long = coord[0][0];
        console.log('3');

        const map = new YMap(
            document.getElementById('map'),
            {
                location: {
                    center: [long, lat],
                    zoom: 15
                }
            }
        );

        map.addChild(new YMapDefaultFeaturesLayer({}));
        map.addChild(new YMapDefaultSchemeLayer({}));
        console.log('4');

        const line = new YMapFeature({
            geometry: {
                type: 'LineString',
                coordinates: coord
            },
            style: { stroke: [{ color: '#007afce6', width: 8 }] }
        });
        console.log(line.geometry.coordinates);
        map.addChild(line);
       
        console.log('1');
        const marker = new YMapDefaultMarker(
            {

                coordinates: [long, lat],
                title:'<div class="ymap-title"> Скорость = ' + information[0].speed+'</div>' ,
                subtitle: '<div class="ymap-subtitle"> Направление = ' + information[0].heading + ' <br> Время= ' + information[0].CreationTime+'</div>',
                color: 'blue'
            }
        );
        /*map.addChild(lineStringFeature);*/
        map.addChild(marker);
    }
</script>
